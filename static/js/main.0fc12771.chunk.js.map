{"version":3,"sources":["assets/icons/search.svg","assets/icons/smartphone.svg","assets/icons/react-brands.svg","assets/icons/tablet.svg","assets/icons/monitor.svg","components/Home.js","components/Device.js","components/View.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","urlInput","React","createRef","search","e","key","urlMatch","this","current","value","match","RegExp","urlMatchTwo","urlToSend","setUrl","className","id","ref","type","placeholder","onFocus","onBlur","onKeyDown","sendUrl","onClick","src","SearchIcon","Component","Device","frameSrc","width","height","style","marginLeft","marginTop","transform","scale","View","state","deviceHeight","deviceWidth","deviceScale","activeDevice","toggleSearch","i","deviceSizes","setState","target","searched","hideSearch","defaultValue","viewUrl","setDeviceSize","SmartphoneIcon","TabletIcon","DesktopIcon","App","url","bind","href","ReactIcon","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0fc12771.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.5437e521.svg\";","module.exports = __webpack_public_path__ + \"static/media/smartphone.2b990350.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-brands.b0d49312.svg\";","module.exports = __webpack_public_path__ + \"static/media/tablet.3b74c4e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/monitor.0f1222c0.svg\";","import React from 'react';\n\nimport SearchIcon from '../assets/icons/search.svg';\n\nclass Home extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.urlInput = React.createRef();\n        this.search = React.createRef();\n    }\n\n    sendUrl(e){\n        if(e === \"submit\" || e.key === 'Enter'){\n            let urlMatch = this.urlInput.current.value.match(new RegExp('(https?:\\/\\/)'));\n            let urlMatchTwo = this.urlInput.current.value.match(new RegExp('(\\.)'));\n\n            if(urlMatch || urlMatchTwo){\n                let urlToSend = this.urlInput.current.value;\n\n                if(urlMatchTwo && !urlMatch){\n                    urlToSend = \"https://\" + urlToSend;\n                }\n                this.props.setUrl(urlToSend);\n            }\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"container\" id=\"home\">\n\n                <div className=\"search-field\" ref={this.search}>\n                    <input type=\"search\" placeholder=\"enter your url here...\" ref={this.urlInput} \n                        onFocus={()=>{this.search.current.className = \"search-field active\"}} \n                        onBlur={()=>{this.search.current.className = \"search-field\"}}\n                        onKeyDown={(e)=>{this.sendUrl(e)}}></input>\n\n                    <button onClick={()=>{this.sendUrl(\"submit\")}}><img src={SearchIcon}/></button>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\n\n\nclass Device extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    // TODO - Add SVG graphics for device borders.\n    render(){\n        return(\n            <div className=\"device-preview\">\n                <iframe src={this.props.frameSrc} width={this.props.width} height={this.props.height}\n                    style={{\n                        marginLeft: -(this.props.width / 2 - 6),\n                        marginTop: -(this.props.height / 2 - 50),\n                        transform: `scale(${this.props.scale})`\n                    }}></iframe>\n            </div>\n        );\n    }\n}\n\nexport default Device;","import React from 'react';\n\nimport Device from './Device';\nimport SmartphoneIcon from '../assets/icons/smartphone.svg';\nimport TabletIcon from '../assets/icons/tablet.svg';\nimport DesktopIcon from '../assets/icons/monitor.svg';\nimport SearchIcon from '../assets/icons/search.svg';\n\nclass View extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            deviceHeight: 823,\n            deviceWidth: 411,\n            deviceScale: 0.75,\n            activeDevice: 1,\n            toggleSearch: false\n        }\n\n        this.urlInput = React.createRef();\n    }\n\n    sendUrl(e){\n        if(e === \"submit\" || e.key === 'Enter'){\n            let urlMatch = this.urlInput.current.value.match(new RegExp('(https?:\\/\\/)'));\n            let urlMatchTwo = this.urlInput.current.value.match(new RegExp('(\\.)'));\n\n            if(urlMatch || urlMatchTwo){\n                let urlToSend = this.urlInput.current.value;\n\n                if(urlMatchTwo && !urlMatch){\n                    urlToSend = \"https://\" + urlToSend;\n                }\n                this.props.setUrl(urlToSend);\n            }\n        }\n    }\n\n    setDeviceSize(i){\n\n        // Width, Height, Scale\n        let deviceSizes = [\n            [375,667, 0.8],\n            [411,823, 0.75],\n            [1024,768, 0.75],\n            [1280,800, 0.6],\n            [1680,1050, 0.6]\n        ];\n        this.setState({\n            deviceWidth: deviceSizes[i][0],\n            deviceHeight: deviceSizes[i][1],\n            deviceScale: deviceSizes[i][2],\n            activeDevice: i\n        });\n    }\n\n    hideSearch(e){\n        if(e.target !== this.urlInput.current && this.state.toggleSearch){\n            this.setState({\n                toggleSearch: false\n            });\n        }\n    }\n\n    render(){\n        return(\n            <div id=\"resp-viewer\" className={this.props.searched ? null : \"hidden\"} onClick={(e)=>{this.hideSearch(e)}}>\n                <div className=\"container\" onClick={(e)=>{this.hideSearch(e)}}>\n                    <input ref={this.urlInput} className={this.state.toggleSearch ? \"url active\" : \"url\"} type=\"search\" placeholder=\"enter an address here...\" defaultValue={this.props.viewUrl || \"\"}\n                            onKeyDown={(e)=>{this.sendUrl(e)}}/>\n\n                        <img src={SearchIcon} id=\"search-button\" onClick={()=>{this.setState({toggleSearch: !this.state.toggleSearch})}}/>\n\n                        <div className=\"device-select\">\n                            <ul>\n                                <li className={this.state.activeDevice === 0 ? \"active\" : \"\"} \n                                    onClick={()=>{this.setDeviceSize(0)}}>\n                                        <img src={SmartphoneIcon}/><p>Mobile<span>375 x 667</span></p>\n                                </li>\n                                <li className={this.state.activeDevice === 1 ? \"active\" : \"\"} \n                                    onClick={()=>{this.setDeviceSize(1)}}>\n                                        <img src={SmartphoneIcon}/><p>Large Mobile<span>411 x 823</span></p>\n                                </li>\n                                <li className={this.state.activeDevice === 2 ? \"active\" : \"\"} \n                                    onClick={()=>{this.setDeviceSize(2)}}>\n                                        <img src={TabletIcon}/><p>Tablet<span>1024 x 768</span></p>\n                                </li>\n                                <li className={this.state.activeDevice === 3 ? \"active\" : \"\"} \n                                    onClick={()=>{this.setDeviceSize(3)}}>\n                                        <img src={SmartphoneIcon}/><p>Small Laptop<span>1280 x 800</span></p>\n                                </li>\n                                <li className={this.state.activeDevice === 4 ? \"active\" : \"\"} \n                                    onClick={()=>{this.setDeviceSize(4)}}>\n                                        <img src={DesktopIcon}/><p>Desktop<span>1680 x 1050</span></p>\n                                </li>\n                            </ul>\n                        </div>\n\n                        <Device width={this.state.deviceWidth} height={this.state.deviceHeight} scale={this.state.deviceScale} frameSrc={this.props.viewUrl}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default View;","import React from 'react';\n\nimport './App.css';\nimport ReactIcon from './assets/icons/react-brands.svg';\n\nimport Home from './components/Home';\nimport View from './components/View';\n\nclass App extends React.Component {\n  constructor(props){\n      super(props);\n\n      this.state = {\n        url: null,\n        searched: false,\n      };\n\n      this.setUrl = this.setUrl.bind(this);\n  }\n\n  setUrl(url){\n    this.setState({\n      url: url,\n      searched: true\n    });\n  }\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <View viewUrl={this.state.url} searched={this.state.searched} setUrl={this.setUrl}/>\n        <Home setUrl={this.setUrl}/>\n        <p id=\"credit\">Made with <a href=\"https://reactjs.org/\"><img src={ReactIcon}/></a> by <a href=\"https://github.com/craigmhughes\">Craig Hughes</a></p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}