{"version":3,"sources":["assets/svg-art/Small Mobile.svg","assets/svg-art/Large Mobile.svg","assets/svg-art/Tablet.svg","assets/svg-art/Laptop.svg","assets/svg-art/Desktop.svg","assets/svg-art/Splash Vector.svg","assets/svg-art/Splash Vector (Underlay).svg","assets/icons/search.svg","components/Home.js","components/Search.js","components/DeviceOption.js","components/DeviceSelect.js","components/View.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","urlInput","React","createRef","search","artSection","main","className","id","initial","animate","exit","variants","in","opacity","x","init","out","ref","this","src","SplashUnderlay","SplashArt","onClick","history","push","window","location","href","Component","Search","SearchIcon","type","placeholder","useUrl","current","value","DeviceOption","setActiveDevice","option","index","activeDevice","icon","title","dimensions","DeviceSelect","state","activeDevices","bind","url","setState","deviceInfo","deviceIcons","SmallMobile","LargeMobile","Tablet","Laptop","Desktop","deviceOptions","forEach","info","indexOf","key","setDevices","View","deviceStyles","selectedDevices","styles","marginTop","transform","marginLeft","borderRadius","height","console","log","icons","width","style","App","urlFail","length","devices","basename","process","exitBeforeEnter","exact","path","render","displayName","name","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2499fe36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Small Mobile.9fa6b859.svg\";","module.exports = __webpack_public_path__ + \"static/media/Large Mobile.54dfc7ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/Tablet.d1069b28.svg\";","module.exports = __webpack_public_path__ + \"static/media/Laptop.922aa28c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Desktop.a690c9f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Splash Vector.6cfd3d76.svg\";","module.exports = __webpack_public_path__ + \"static/media/Splash Vector (Underlay).32cd7673.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.5437e521.svg\";","import React from 'react';\nimport {motion} from 'framer-motion';\n\n// SVG Art\nimport SplashArt from '../assets/svg-art/Splash Vector.svg';\nimport SplashUnderlay from '../assets/svg-art/Splash Vector (Underlay).svg';\n\nclass Home extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.urlInput = React.createRef();\n        this.search = React.createRef();\n        this.artSection = React.createRef();\n    }\n\n    render(){\n\n        // Animation object decides styles for each animation state.\n        const pageTransition = {\n            in: {\n                opacity: 1,\n                x: \"-100%\",\n            },\n            init: {\n                opacity: 1,\n                x: 0,\n            },\n            out: {\n                opacity: 0,\n                x: \"-100%\",\n            }\n        };\n\n        return(\n            <motion.main className=\"container\" id=\"home\"\n                initial=\"in\"\n                animate=\"init\"\n                exit=\"out\"\n                variants={pageTransition}\n            >\n                <header>\n                    <h1>Responsive <br/>Website Tester</h1>\n                </header>\n                \n                <section className=\"body\">\n                    <section id=\"home-art\" ref={this.artSection}>\n                        <img src={SplashUnderlay} className=\"art\"/>\n                        <img src={SplashArt} className=\"art\"/>\n                    </section>\n                </section>\n                <section className=\"footer\">\n                    <button className=\"primary-btn btn\" onClick={()=>{this.props.history.push(\"search\")}}>Get Started</button>\n                    <button className=\"secondary-btn btn credit\" onClick={()=>{window.location.href = \"https://github.com/craigmhughes\"}}>Project by <span>Craig Hughes</span></button>\n                </section>\n            </motion.main>\n        );\n    }\n\n}\n\nexport default Home;","import React from 'react';\nimport {motion} from 'framer-motion';\n\nimport SearchIcon from '../assets/icons/search.svg';\n\nclass Search extends React.Component {\n  constructor(props){\n      super(props);\n\n      this.urlInput = React.createRef();\n  }\n  \n  render(){\n\n    // Animation object decides styles for each animation state.\n    const pageTransition = {\n      in: {\n        opacity: 1,\n        x: \"100%\",\n      },\n      init: {\n        opacity: 1,\n        x: 0,\n      },\n      out: {\n          opacity: 0,\n          x: \"-100%\",\n      }\n    };\n\n    return(\n        <motion.main className=\"container\" id=\"search\"\n            initial=\"in\"\n            animate=\"init\"\n            exit=\"out\"\n            variants={pageTransition}\n        >\n            <header>\n                <h1>Which site are you testing?</h1>\n            </header>\n\n            <section className=\"body\">\n              <div className=\"search-field\" ref={this.search}>\n                <img src={SearchIcon}/>\n\n                <input type=\"search\" placeholder=\"Enter your URL here\" ref={this.urlInput}></input>              \n              </div>\n            </section>\n\n            <section className=\"footer\">\n                    <button className=\"primary-btn btn\" onClick={()=>{\n                      let hasUrl = this.props.useUrl(this.urlInput.current.value) !== false;\n\n                      if(hasUrl){\n                        this.props.history.push(\"device-select\");\n                      }\n\n                      }}>Continue</button>\n                </section>\n        </motion.main>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\n\nclass DeviceOption extends React.Component {\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return (\n            <li onClick={()=>{ this.props.setActiveDevice(this.props.option, this.props.index) }} className={this.props.activeDevice === this.props.index ? \"active\" : \"\"}>\n                <img src={this.props.icon}/>\n                <h3>{this.props.title}</h3>\n                <p>({this.props.dimensions} px)</p>\n            </li>\n        );\n    }\n}\n\nexport default DeviceOption;","import React from 'react';\nimport {motion} from 'framer-motion';\n\nimport SmallMobile from '../assets/svg-art/Small Mobile.svg';\nimport LargeMobile from '../assets/svg-art/Large Mobile.svg';\nimport Tablet from '../assets/svg-art/Tablet.svg';\nimport Laptop from '../assets/svg-art/Laptop.svg';\nimport Desktop from '../assets/svg-art/Desktop.svg';\n\nimport DeviceOption from './DeviceOption';\n\n\nclass DeviceSelect extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      activeDevices: [null, null]\n    };\n\n    this.setActiveDevice = this.setActiveDevice.bind(this);\n  }\n\n  componentDidMount(){\n    if(this.props.url == null){\n      this.props.history.push(\"/search\");\n      return false;\n  }\n  }\n\n  setActiveDevice(option, index){\n    this.setState({\n      activeDevices: option > 0 ? [ this.state.activeDevices[0], [option, index] ] :\n        [ [option, index], this.state.activeDevices[1] ]\n    });\n  }\n  \n  render(){\n\n    //  Controls Framer Motion animation states.\n    const pageTransition = {\n      in: {\n        opacity: 1,\n        x: \"100%\",\n      },\n      init: {\n        opacity: 1,\n        x: 0,\n      },\n      out: {\n          opacity: 0,\n          x: \"-100%\",\n      }\n    };\n\n    // Device information to be rendered.\n    const deviceInfo = [\n      {\n          title: \"Small Mobile\",\n          dimensions: \"375 x 667\"\n      },\n      {\n          title: \"Large Mobile\",\n          dimensions: \"411 x 823\"\n      },\n      {\n          title: \"Tablet\",\n          dimensions: \"1024 x 768\"\n      },\n      {\n          title: \"Small Laptop\",\n          dimensions: \"1280 x 800\"\n      },\n      {\n          title: \"Desktop\",\n          dimensions: \"1680 x 1050\"\n      },\n    ];\n\n    const deviceIcons = [\n      SmallMobile,\n      LargeMobile,\n      Tablet,\n      Laptop,\n      Desktop\n    ];\n\n    let activeDevices = [this.state.activeDevices[0] !== null ? this.state.activeDevices[0][1] : null,\n      this.state.activeDevices[1] !== null ? this.state.activeDevices[1][1] : null];\n\n    let deviceOptions = [[],[]];\n\n    // Run through options and create elements for them.\n    deviceInfo.forEach(info => {\n      let index = deviceInfo.indexOf(info);\n      // Push to Option One array\n      deviceOptions[0].push(<DeviceOption key={index} index={index} title={info.title} dimensions={info.dimensions} \n        option={0} activeDevice={activeDevices[0]} setActiveDevice={this.setActiveDevice} icon={deviceIcons[index]}/>);\n      // Push to Option Two array\n      deviceOptions[1].push(<DeviceOption key={index} index={index} title={info.title} dimensions={info.dimensions} \n        option={1} activeDevice={activeDevices[1]} setActiveDevice={this.setActiveDevice} icon={deviceIcons[index]}/>);\n    });\n\n    return(\n        <motion.main className=\"container\" id=\"device-select\"\n            initial=\"in\"\n            animate=\"init\"\n            exit=\"out\"\n            variants={pageTransition}\n        >\n            <header>\n                <h1>Choose devices to compare</h1>\n            </header>\n\n            <section className=\"body\">\n              <section>\n                <h2 className=\"subtitle\">Option One</h2>\n                <ul className=\"device-list\">\n                  {deviceOptions[0]}\n                </ul>\n              </section>\n              <section>\n                <h2 className=\"subtitle\">Option Two</h2>\n                <ul className=\"device-list\">\n                  {deviceOptions[1]}\n                </ul>\n              </section>\n            </section>\n\n            <section className=\"footer\">\n                <button className=\"primary-btn btn\" onClick={()=>{\n                    this.props.setDevices([this.state.activeDevices[0][1], this.state.activeDevices[1][1]]);\n                    this.props.history.push(\"/view\");\n                  }}>View Devices</button>\n            </section>\n        </motion.main>\n    );\n  }\n}\n\nexport default DeviceSelect;\n","import React from 'react';\nimport {motion} from 'framer-motion';\n\nimport SmallMobile from '../assets/svg-art/Small Mobile.svg';\nimport LargeMobile from '../assets/svg-art/Large Mobile.svg';\nimport Tablet from '../assets/svg-art/Tablet.svg';\nimport Laptop from '../assets/svg-art/Laptop.svg';\nimport Desktop from '../assets/svg-art/Desktop.svg';\n\nclass View extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            deviceIcons: null,\n            dimensions: null,\n            deviceStyles: [null, null]\n        };\n    }\n\n    componentDidMount(){\n        if(this.props.selectedDevices == null || this.props.url == null){\n            this.props.history.push(\"/device-select\");\n            return false;\n        }\n\n        const deviceIcons = [\n            SmallMobile,\n            LargeMobile,\n            Tablet,\n            Laptop,\n            Desktop\n        ];\n\n        const deviceInfo = [\n                [375, 667],\n                [411, 823],\n                [768, 1024],\n                [1280, 800],\n                [1680, 1050]\n        ];\n\n        // Create styles to scale iframe into svg frame correctly.\n        const styles = [\n            {marginTop: \"-6.75em\", transform: \"scale(0.4)\"},\n            {marginTop: \"calc(-10.5em + 40px)\", transform: \"scale(0.375)\", marginLeft: \"-3.8em\", borderRadius: \"2em\", height: \"763px\"},\n            {marginTop: \"-15em\", transform: \"scale(0.275)\", marginLeft: \"-11em\"},\n            {marginTop: \"-9.8em\", transform: \"scale(0.325)\", marginLeft: \"-15.75em\"},\n            {marginTop: \"-17.15em\", transform: \"scale(0.24)\", marginLeft: \"-27.8em\"}\n        ];\n\n        console.log(this.props.selectedDevices);\n\n        this.setState({\n            deviceIcons: [ deviceIcons[this.props.selectedDevices[0]], deviceIcons[this.props.selectedDevices[1]] ],\n            dimensions: [   [deviceInfo[this.props.selectedDevices[0]][0], deviceInfo[this.props.selectedDevices[0]][1] ], \n                            [deviceInfo[this.props.selectedDevices[1]][0], deviceInfo[this.props.selectedDevices[1]][1] ]\n                        ],\n            deviceStyles: [styles[this.props.selectedDevices[0]], styles[this.props.selectedDevices[1]]]\n        });\n    }\n\n    render(){\n        const pageTransition = {\n          in: {\n            opacity: 1,\n            x: \"100%\",\n          },\n          init: {\n            opacity: 1,\n            x: 0,\n          },\n          out: {\n              opacity: 0,\n              x: \"-100%\",\n          }\n        };\n\n        let icons = this.state.deviceIcons == null ? [null, null] : [this.state.deviceIcons[0], this.state.deviceIcons[1]];\n        let dimensions = this.state.dimensions == null ? [[0,0],[0,0]] : this.state.dimensions;\n    \n        return(\n            <motion.main className=\"container\" id=\"device-view\"\n                initial=\"in\"\n                animate=\"init\"\n                exit=\"out\"\n                variants={pageTransition}\n            >\n                <header>\n                    <h1>Device View</h1>\n                </header>\n    \n                <section className=\"body\">\n                    <section>\n                        <div>\n                            <iframe src={this.props.url} width={dimensions[0][0]} height={dimensions[0][1]} style={this.state.deviceStyles[0]}></iframe>\n                            <img src={icons[0]}/>\n                        </div>\n                    </section>\n                    <section>\n                        <div>\n                            <iframe src={this.props.url} width={dimensions[1][0]} height={dimensions[1][1]}  style={this.state.deviceStyles[1]}></iframe>\n                            <img src={icons[1]}/>\n                        </div>\n                    </section>\n                </section>\n    \n                <section className=\"footer\">\n                    <button className=\"primary-btn btn\" onClick={()=>this.props.history.push(\"/device-select\")}>Reselect Devices</button>\n                </section>\n            </motion.main>\n        );\n      }\n}\n\nexport default View;","import React from 'react';\nimport {Route, BrowserRouter as Router, Switch, withRouter} from 'react-router-dom';\nimport {AnimatePresence} from 'framer-motion';\n\n\nimport \"./App.css\";\nimport Home from './components/Home';\nimport Search from './components/Search';\nimport DeviceSelect from './components/DeviceSelect';\nimport View from './components/View';\n\nclass App extends React.Component {\n  static displayName = App.name;\n  \n  constructor(props){\n      super(props);\n\n      this.state = {\n        url: null,\n        urlFail: null,\n        selectedDevices: null\n      };\n\n      this.useUrl = this.useUrl.bind(this);\n      this.setDevices = this.setDevices.bind(this);\n  }\n\n  /**\n   * Check and use URL if it passes conditions.\n   * @param {*} url - URL string passed from Search prop\n   * @returns String to pass to URL.\n   */\n  useUrl(url){\n\n    if(url.length < 1){\n      return false;\n    }\n\n    this.setState({\n      url: `https://${url}`\n    });\n\n    return \"device-select\";\n  }\n\n  setDevices(devices){\n\n    if(devices[0] == null || devices[1] == null){\n      return false;\n    }\n\n    this.setState({\n      selectedDevices: devices\n    });\n  }\n\n  /**\n   * TODO: Validate HTML, CSS & SVGs.\n   * Look up front end framework (Gatsby, Rust, etc)\n   */\n  render(){\n    return (\n      <Router className=\"App\" basename={`${process.env.PUBLIC_URL}/`}>\n        <AnimatePresence exitBeforeEnter>\n          <Switch location={this.props.history} key={this.props.history}>\n            <Route exact path='/' render={(props)=><Home history={props.history}/>} />\n            <Route exact path='/search' render={(props)=><Search useUrl={this.useUrl} history={props.history}/>} />\n            <Route exact path='/device-select' render={(props)=><DeviceSelect history={props.history} url={this.state.url} setDevices={this.setDevices}/>} />\n            <Route exact path='/view' render={(props)=><View history={props.history} selectedDevices={this.state.selectedDevices} url={this.state.url}/>} />\n          </Switch>\n        </AnimatePresence>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}